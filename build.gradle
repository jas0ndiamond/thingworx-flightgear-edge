apply plugin: 'java'
apply plugin: 'eclipse'
apply from: 'dependencies.gradle'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    
    //need both of these maven repos for geotools
    maven {
        url "https://maven.geo-solutions.it/"
    }
    maven {
        url "https://repo.osgeo.org/repository/release/"
    }
    
    jcenter()
    mavenCentral() 
        
    flatDir {
        dirs 'lib'
    }
}
    
ext {
    projectVersion = "0.2"
    title = "thingworx-flightgear-edge"
}

dependencies {

    implementation libs.edge_sdk_libs
    implementation libs.flightgear_control
    implementation libs.geotools
    implementation libs.mina_sshd
    
    //edge java sdk 7.0.1
    implementation fileTree(dir: project.file("lib/"), include: ['thingworx-java-sdk-7.0.1.jar'])
    
    //flightgear-control 0.2.0
    implementation fileTree(dir: project.file("lib/"), include: ["flightgear-control-0.2.jar"])  
}

eclipse {
    //load sources jars for flightgear-control and the twx java sdk
    
    classpath {
        file {
            whenMerged { 
                def lib = entries.find { it.path.contains 'flightgear-control-0.2.jar' }
                lib.sourcePath = fileReference(file('lib/flightgear-control-0.2-src.jar'))
                
                lib = entries.find { it.path.contains 'thingworx-java-sdk-7.0.1.jar' }
                lib.sourcePath = fileReference(file('lib/thingworx-java-sdk-7.0.1-src.jar'))
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

jar {
    archiveBaseName = title 
    archiveVersion = projectVersion

    from(sourceSets.main.output)
    
    //fatjar
    //from {
        //runtimeClasspath for class files from local jars
    //    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    //}
    
    
    //no main, since we have a bunch of clients
    manifest {
        
    //    attributes ([
    //        'Main-Class': 'org.jason.fgedge.sshd.EdgeSSHServerTester'
    //    ])
        
    }
    
    //need to exclude sig data from some libraries
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
}
